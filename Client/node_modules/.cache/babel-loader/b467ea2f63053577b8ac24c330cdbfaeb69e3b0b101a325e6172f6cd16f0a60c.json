{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefa\\\\OneDrive\\\\Documents\\\\SOFTWARE ENGINEERING PROJECT SPRINT 2\\\\SOFTWARE-ENGINEERING-221\\\\Client\\\\src\\\\Pages\\\\Home\\\\Monitor.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useFetch from './useFetch';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Monitor = () => {\n  _s();\n  const {\n    data: parkingLots,\n    loading,\n    error\n  } = useFetch('http://localhost:8000/monitor-parking-lots');\n  if (loading) return 'Loading...';\n  if (error) return 'Error!';\n  const pieData = parkingLots.map(parkingLot => ({\n    title: parkingLot.location,\n    value: parkingLot.availability,\n    color: '#' + Math.floor(Math.random() * 16777215).toString(16) // Random color for each slice\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [parkingLots && parkingLots.map(parkingLot => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: parkingLot.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Total Spaces: \", parkingLot.capacity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Available Spaces: \", parkingLot.availability]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Occupied Spaces: \", parkingLot.capacity - parkingLot.availability]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Type of Parking: \", parkingLot.type_of_parking]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Price: \", parkingLot.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, parkingLot.lot_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(PieChart, {\n      data: pieData,\n      label: ({\n        dataEntry\n      }) => dataEntry.title,\n      labelStyle: {\n        fontSize: '5px',\n        fontFamily: 'sans-serif'\n      },\n      radius: 42,\n      labelPosition: 112\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Monitor, \"S5wSuMt6L1MkwZTFJVxrId+H1KA=\", false, function () {\n  return [useFetch];\n});\n_c = Monitor;\nexport default Monitor;\nvar _c;\n$RefreshReg$(_c, \"Monitor\");","map":{"version":3,"names":["React","useFetch","PieChart","jsxDEV","_jsxDEV","Monitor","_s","data","parkingLots","loading","error","pieData","map","parkingLot","title","location","value","availability","color","Math","floor","random","toString","children","className","fileName","_jsxFileName","lineNumber","columnNumber","capacity","type_of_parking","price","lot_id","label","dataEntry","labelStyle","fontSize","fontFamily","radius","labelPosition","_c","$RefreshReg$"],"sources":["C:/Users/Stefa/OneDrive/Documents/SOFTWARE ENGINEERING PROJECT SPRINT 2/SOFTWARE-ENGINEERING-221/Client/src/Pages/Home/Monitor.jsx"],"sourcesContent":["import React from 'react';\r\nimport useFetch from './useFetch';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\n\r\n\r\nconst Monitor = () => {\r\n  const { data: parkingLots, loading, error } = useFetch('http://localhost:8000/monitor-parking-lots');\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return 'Error!';\r\n\r\n\r\n\r\n  const pieData = parkingLots.map(parkingLot => ({\r\n    title: parkingLot.location,\r\n    value: parkingLot.availability,\r\n    color: '#' + Math.floor(Math.random()*16777215).toString(16) // Random color for each slice\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      {parkingLots && parkingLots.map(parkingLot => (\r\n        <div className='card' key={parkingLot.lot_id}>\r\n          <h2 className='card-title'>{parkingLot.location}</h2>\r\n          <p className='card-text'>Total Spaces: {parkingLot.capacity}</p>\r\n          <p className='card-text'>Available Spaces: {parkingLot.availability}</p>\r\n          <p className='card-text'>Occupied Spaces: {parkingLot.capacity - parkingLot.availability}</p>\r\n          <p className='card-text'>Type of Parking: {parkingLot.type_of_parking}</p>\r\n          <p className='card-text'>Price: {parkingLot.price}</p>\r\n        </div>\r\n        \r\n      ))}\r\n         <PieChart\r\n        data={pieData}\r\n        label={({ dataEntry }) => dataEntry.title}\r\n        labelStyle={{\r\n          fontSize: '5px',\r\n          fontFamily: 'sans-serif',\r\n        }}\r\n        radius={42}\r\n        labelPosition={112}\r\n      />\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Monitor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}