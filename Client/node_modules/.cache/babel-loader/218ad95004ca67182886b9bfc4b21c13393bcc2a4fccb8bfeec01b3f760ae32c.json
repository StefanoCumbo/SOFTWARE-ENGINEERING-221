{"ast":null,"code":"import { useState } from 'react';\nconst usePatch = url => {\n  const patch = async (id, updateData) => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${url}/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setData(data);\n      setLoading(false);\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  };\n  return {\n    patch\n  };\n};\nexport default usePatch;","map":{"version":3,"names":["useState","usePatch","url","patch","id","updateData","setLoading","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","setData","error","setError"],"sources":["C:/Users/Stefa/OneDrive/Documents/SOFTWARE ENGINEERING PROJECT SPRINT 2/SOFTWARE-ENGINEERING-221/Client/src/Pages/Home/usePatch.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\n\r\n\r\nconst usePatch = (url) => {\r\n   \r\n\r\n    const patch = async (id, updateData) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${url}/${id}`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(updateData)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setData(data);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setError(error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return { patch };\r\n};\r\n\r\nexport default usePatch;\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAIhC,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAGtB,MAAMC,KAAK,GAAG,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACpCC,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,GAAI,IAAGE,EAAG,EAAC,EAAE;QACzCK,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,UAAU;MACnC,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBR,QAAQ,CAACS,MAAO,EAAC,CAAC;MAC7D;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACF,IAAI,CAAC;MACbX,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAAC;MACfd,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,OAAO;IAAEH;EAAM,CAAC;AACpB,CAAC;AAED,eAAeF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}